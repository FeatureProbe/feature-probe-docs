<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Feature Probe Blog</title>
        <link>https://featureprobe.github.io/feature-probe-docs/zh-CN/blog</link>
        <description>Feature Probe Blog</description>
        <lastBuildDate>Mon, 29 Aug 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <item>
            <title><![CDATA[FeatureProbe的架构设计和主要特点]]></title>
            <link>https://featureprobe.github.io/feature-probe-docs/zh-CN/blog/FeatureProbe Architecture</link>
            <guid>FeatureProbe Architecture</guid>
            <pubDate>Mon, 29 Aug 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Coming soon!]]></description>
            <content:encoded><![CDATA[<p>Coming soon!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[FeatureProbe：如何快速、安全地进行功能发布]]></title>
            <link>https://featureprobe.github.io/feature-probe-docs/zh-CN/blog/FeatureProbe</link>
            <guid>FeatureProbe</guid>
            <pubDate>Mon, 15 Aug 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[在产品快速迭代中，要做到高效的功能发布同时还要降低上线风险，需要采用合适的技术对功能发布进行精细化的管控。FeatureProbe 就是一个高效的功能管理（Feature management）开源服务，它提供了灰度放量、AB实验、实时配置变更等针对功能粒度的一系列管理能力，本文将介绍如何使用 FeatureProbe 进行快速、安全地做功能发布和迭代。]]></description>
            <content:encoded><![CDATA[<p>在产品快速迭代中，要做到高效的功能发布同时还要降低上线风险，需要采用合适的技术对功能发布进行精细化的管控。FeatureProbe 就是一个高效的功能管理（Feature management）开源服务，它提供了灰度放量、AB实验、实时配置变更等针对功能粒度的一系列管理能力，本文将介绍如何使用 FeatureProbe 进行快速、安全地做功能发布和迭代。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="一动态配置">一、动态配置<a class="hash-link" href="#一动态配置" title="标题的直接链接">​</a></h3><p>如果你没有接触过功能管理服务，那相信你对配置中心不会陌生。从分布式系统兴起之后，配置中心已经是分布式系统中不可或缺的一部分。从技术上来说，功能管理或配置中心本质上都是通过配置规则动态控制应用程序行为，所带来的好处是省去了修改代码、编译、打包、部署流程。在动态配置的实践中，我们通常会以 <strong>Key-Value</strong> 的形式将配置规则存储在某个服务中统一管理，并通过数据分发将配置传输至应用程序中，同时还有一个可以给应用程序获取配置的客户端库(SDK)。
下面通过一个示例演示 <strong>Key-Value</strong> 配置以及如何通过代码获取配置：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// key-value config:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{ "enable_feature_124": true }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// sdk code: </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sdkClient.BooleanValue("enable_feature_124") =&gt; true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>对于一些简单配置需求都可以用这种 <strong>Key-Value</strong> 方式组织和获取配置，例如： </p><ul><li><strong>“控制功能 #124 关闭或开启”</strong>    </li><li><strong>“将 'name' 文本框的字符大小限制为 256 个字符”</strong></li><li><strong>“redis 的连接地址是 '172.48.1.4:6379' ”</strong></li></ul><p>与上述类似的使用方式已经在功能开关、应用程序配置、快速限流降级等领域被广泛应用。
上述基于一对一的 Key-Value 映射配置虽然已经足够灵活通用，但仍然难以支持一些较复杂的功能场景。比如我们很难在 <strong>Key-Value</strong> 配置中体现如下场景：  </p><ul><li><strong>场景1：“只有从北京访问的且'级别'是 VIP 的用户启用功能 #124”</strong>              </li><li><strong>场景2：“只有用户 APP 版本大于 1.0.1 且在每天 18:00~20:00 时开启运营活动，否则关闭活动并显示‘活动已结束’的提示信息”</strong>                             </li></ul><p>上述场景的特点是应用程序在运行时需要根据上下文信息计算出相应的值，并且当上下文（需求）发生变化时，例如调整场景一为 <strong>“只有北京10%的用户启用功能  #124 ”</strong> ，在不更改代码的情况下很难做到快速支持。这也是 FeatureProbe 作为功能管理服务与传统 <strong>Key-Value</strong> 配置中心最大的区别：</p><table><thead><tr><th></th><th>配置定义</th><th>SDK</th><th>特点</th></tr></thead><tbody><tr><td>配置中心</td><td>Key-Value</td><td>根据 key 获取 value</td><td><ul> <li>难以在配置中体现业务逻辑 </li> <br> <li>难以通过变更配置来快速调业务逻辑 </li> </ul></td></tr><tr><td>功能管理服务</td><td>由一组表达业务语义的 if / else 逻辑组成</td><td>根据 key + user 属性（上下文）来执行配置中定义的逻辑并判定出返回的 value</td><td><ul> <li>配置中体现业务逻辑</li> <br> <li> 变更配置规则快速调整业务逻辑 </li> </ul></td></tr></tbody></table><p>下面通过一个简单示例演示功能管理服务的配置定义以及如何用代码获取相应的值：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// feature management config:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"enable_feature_124" : {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  if user ("city" equals "beijing" and "level" equals "vip") : true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  else                                                       : false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// sdk code:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sdkClient.BoolValue("enable_feature_124", {city: "beijing", level: "vip"}) =&gt; true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sdkClient.BoolValue("enable_feature_124", {city: "shanghai", level: "vip"}) =&gt; false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="二渐进式发布">二、渐进式发布<a class="hash-link" href="#二渐进式发布" title="标题的直接链接">​</a></h3><p>接下来我们通过一个示例来介绍如何使用 FeatureProbe，比如当我们需要发布一个新功能时，为了避免新功能的代码对线上产生影响，我们会使用功能开关 <strong>（Feature toggles）</strong> 来控制新功能的代码只能被某个城市的某些用户访问到。代码如下所示：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">user := featureprobe.NewUser(reuqest.userid)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    .With("city", request.city)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    .With("username": request.username)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">enableFeature123 := fpClient.BoolValue("enable_feature_123", user, false)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if enableFeature123 {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // new code: use the feature</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  // old code: don't use the feature</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>当我们将新功能代码部署后，对应用程序几乎不会产生任何影响，因为在默认情况下，所有新功能的代码都被功能开关控制，同时是否启用新功能的开关初始默认值为 false。下面为该功能开关配置规则：
<strong>FeatuteProbe toggle rules</strong></p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">"enable_feature_123": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "defaultServe": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "select": 1   // Return "variations[1]" by default =&gt; false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "variations": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>当我们要对新功能代码线上验证时，这时候希望 <strong>“城市为 北京，且用户名为 'test' 或 'admin' 的特定测试用户才能使用该功能”</strong>,以便于这些用户进行功能验证。此时我们会对功能开关配置进行修改，最终生成的规则配置如下所示（对应规则执行逻辑为右边注释）：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "enable_feature_123":{ </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "rules":[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "conditions":[ // if city in ["beijing"] </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "type":"string",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "subject":"city",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "predicate":"is one of",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "objects":[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            "beijing"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }, // AND</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "type":"string", // username in ["test", "admin"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "subject":"username",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "predicate":"is one of",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "objects":[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                            "test", "admin"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "serve":{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "select":0 // return "variations[0]"  =&gt; true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         "defaultServe":{ // else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "select":1 // return "variations[1]"  =&gt; false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }, </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "variations": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        false</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>该配置更新后，会通过我们的数据分发服务 <strong>（FeatureProbe Server）</strong> 将配置下发到所有需要使用的应用程序中。当应用程序每次通过 SDK 获取返回值时，它将根据 <strong>key + user</strong> 属性以及最新配置规则所定义的逻辑来计算相应的结果。</p><p>当测试用户 <strong>"test" 在 “北京”</strong> 测试该新功能发现问题时，可以通过将开关返回值更新回 <strong>false</strong> 快速关闭新功能的使用。整个过程不涉及到任何代码的变更，即便将需求调整为 <strong>“只有北京10%的用户能访问该功能”</strong>，也仅需在页面就能完成逻辑的变更操作，然后将新的配置规则发布应用程序中即可，通常整个过程只需要几秒钟。</p><p>当功能开关被开启后，可以通过数据监控或集成测试来观察新功能对应用程序造成影响。当验证符合预期的情况后，可就再进一步修改规则配置来让更多的用户使用该功能，如先让某个城市所有人使用该功能，接着继续将用户扩展到多个城市，并最终扩展所有用户。在整个放量过程中，检测到任何问题，都可以立即更新规则或关闭开关来做到快速回滚。通过这种渐进式功能发布 <strong>（Progressive Delivery）</strong> 的方式，能够帮助我们实现快速、安全地进行线上变更。</p><p>当然，渐进式功能发布只是 FeatureProbe 的使用场景之一，其它基于规则的配置的场景也都能很好地支持，如按访问流量放量、基于时间规则的运营活动控制、A/B实验及配置中心等场景。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="三快速试用">三、快速试用<a class="hash-link" href="#三快速试用" title="标题的直接链接">​</a></h3><p>目前 FeatureProbe 使用 Apache 2.0 License 协议已经完全开源。你可以从 <a href="https://github.com/FeatureProbe" target="_blank" rel="noopener noreferrer">GitHub</a> 或 <a href="https://gitee.com/featureprobe" target="_blank" rel="noopener noreferrer">Gitee</a> 上搜索 FeatureProbe 获取到所有代码，为了能够让大家快速体验完整的功能服务，我们提供了<a href="https://featureprobe.io/demo" target="_blank" rel="noopener noreferrer">在线体验环境</a>。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="四总结">四、总结<a class="hash-link" href="#四总结" title="标题的直接链接">​</a></h3><p>本文主要介绍了如何使用 FeatureProbe 快速更新迭代产品功能，并且通过一个实际案例介绍如何使用它进行渐进式的功能发布，以降低线上变更的风险。在下一篇文章中，我们将介绍 <strong>“FeatureProbe的架构设计和主要特点”</strong>。</p><p>如果你对功能开关管理感兴趣，欢迎加入到我们的开源项目中来，共同来推动软件开发行业的效能。同时也可以扫描以下二维码加入我们的开源沟通群大家一起来沟通探讨。</p><img loading="lazy" src="https://user-images.githubusercontent.com/20610466/184835902-4a466b69-6f53-4898-850e-ea6e5548d015.png" width="200" height="300" class="img_ev3q"><p>如以上二维码失效，可扫描以下二维码，添加我们的工作人员。</p><img loading="lazy" src="https://user-images.githubusercontent.com/20610466/184836044-fc5396aa-8ac9-4a95-b8eb-70050caa686f.png" width="220" height="200" class="img_ev3q">]]></content:encoded>
        </item>
    </channel>
</rss>